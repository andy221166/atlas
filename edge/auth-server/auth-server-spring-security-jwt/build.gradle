plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootPluginVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementPluginVersion}"
}

group = 'org.atlas'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lib
    api 'org.springframework.boot:spring-boot-starter-security'

    // Infrastructure
    api project(':infrastructure.spring-boot.api-server.rest.core')
    api project(':infrastructure.spring-boot.cache.simple')
    api project(':infrastructure.spring-boot.config')
    switch (stackConfig['datasource']) {
        case 'mysql':
            api project(':infrastructure.spring-boot.datasource.mysql.adapter.auth')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['datasource']}")
    }
    switch (stackConfig['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':infrastructure.spring-boot.discovery-client.eureka')
            break
        case 'kubernetes':
            api project(':infrastructure.spring-boot.discovery-client.kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['discovery-client']}")
    }
    api project(':infrastructure.spring-boot.observability.actuator')
    switch (stackConfig['observability.logging']) {
        case 'logback':
            api project(':infrastructure.spring-boot.observability.logging.logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['logging']}")
    }
    switch (stackConfig['observability.metrics']) {
        case 'cloudwatch':
            api project(':infrastructure.spring-boot.observability.metrics.cloudwatch')
            break
        case 'prometheus':
            api project(':infrastructure.spring-boot.observability.metrics.prometheus')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['tracing']}")
    }
    switch (stackConfig['observability.tracing']) {
        case 'simple':
            api project(':infrastructure.spring-boot.observability.tracing.simple')
            break
        case 'zipkin':
            api project(':infrastructure.spring-boot.observability.tracing.zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['tracing']}")
    }
    switch (stackConfig['persistence']) {
        case 'jpa':
            api project(':infrastructure.spring-boot.persistence.jpa.adapter.auth')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['persistence']}")
    }
    switch (stackConfig['redis']) {
        case 'standalone':
            api project(':infrastructure.spring-boot.redis.standalone')
            break
        case 'cluster':
            api project(':infrastructure.spring-boot.redis.cluster')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['redis']}")
    }

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
