services:

  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d/
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - KAFKA_HEAP_OPTS=-Xmx64m
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  # Kafka depends on Zookeeper
  # kafka:
  #   container_name: kafka
  #   image: confluentinc/cp-kafka:7.0.1
  #   ports:
  #     - "29092:29092"
  #     - "9092:9092"
  #     - "9101:9101"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
  #     - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
  #     - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
  #     - KAFKA_JMX_PORT=9101
  #     - KAFKA_JMX_HOSTNAME=kafka
  #     - KAFKA_HEAP_OPTS=-Xmx192m
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data
  #   depends_on:
  #     - zookeeper

  # Kafka based on KRaft
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
        - kafka-data:/var/lib/kafka/data

  rabbitmq:
    container_name: rabbitmq
    build:
      context: rabbitmq
      dockerfile: rabbitmq/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2
    command: start-dev
    ports:
      - "8443:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-file # No external DB needed
    volumes:
      - keycloak-data:/opt/keycloak/data

  smtp4dev:
    container_name: smtp4dev
    image: rnwood/smtp4dev
    ports:
      - "5000:80" # Web interface
      - "25:25"   # SMTP server
      - "143:143" # IMAP server
    volumes:
      - smtp4dev-data:/smtp4dev

volumes:
  mysql-data:
  redis-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  rabbitmq-data:
  keycloak-data:
  smtp4dev-data:
