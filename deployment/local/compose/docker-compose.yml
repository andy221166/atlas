version: "3"

services:

  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d/
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - KAFKA_HEAP_OPTS=-Xmx64m
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  # Kafka depends on Zookeeper
  # kafka:
  #   container_name: kafka
  #   image: confluentinc/cp-kafka:7.0.1
  #   ports:
  #     - "29092:29092"
  #     - "9092:9092"
  #     - "9101:9101"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
  #     - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
  #     - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
  #     - KAFKA_JMX_PORT=9101
  #     - KAFKA_JMX_HOSTNAME=kafka
  #     - KAFKA_HEAP_OPTS=-Xmx192m
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data
  #   depends_on:
  #     - zookeeper

  # Kafka based on KRaft
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
        - kafka-data:/var/lib/kafka/data

  rabbitmq:
    container_name: rabbitmq
    build:
      context: rabbitmq
      dockerfile: rabbitmq/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  loki:
    container_name: loki
    image: grafana/loki:main
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    container_name: promtail
    image: grafana/promtail:main
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      # Mount host log dir into promtail log dir
      - user-service-log:/var/log/user-service
      - product-service-log:/var/log/product-service
      - order-service-log:/var/log/order-service
      - notification-service-log:/var/log/notification-service
      - discovery-server-log:/var/log/discovery-server
      - auth-server-log:/var/log/discovery-server
      - api-gateway-log:/var/log/api-gateway
    depends_on:
      - loki

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus-config.yml

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_DB=db_zipkin
      - MYSQL_USER=root
      - MYSQL_PASS=root

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2
    command: start-dev
    ports:
      - "8443:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-file # No external DB needed
    volumes:
      - keycloak-data:/opt/keycloak/data

  smtp4dev:
    container_name: smtp4dev
    image: rnwood/smtp4dev
    ports:
      - "5000:80" # Web interface
      - "25:25"   # SMTP server
      - "143:143" # IMAP server
    volumes:
      - smtp4dev-data:/smtp4dev

  discovery-server:
    container_name: discovery-server
    image: discovery-server:latest
    build:
      context: ../../../edge/discovery-server/discovery-server
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M
    ports:
      - "8761:8761"
    volumes:
      - discovery-server-log:/var/log/discovery-server # Mount container log dir into host log dir

  user-service:
    container_name: user-service
    image: user-service:latest
    build:
      context: ../../../application/spring-boot/user-application
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - EUREKA_DEFAULT_ZONE=http://discovery-server:8761/eureka
      - MYSQL_URL=jdbc:mysql://mysql:3306/db_user?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    volumes:
      - user-service-log:/var/log/user-service
    depends_on:
      - discovery-server

  product-service:
    container_name: product-service
    image: product-service:latest
    build:
      context: ../../../application/spring-boot/product-application
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - EUREKA_DEFAULT_ZONE=http://discovery-server:8761/eureka
      - MYSQL_URL=jdbc:mysql://mysql:3306/db_product?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    volumes:
      - product-service-log:/var/log/product-service
    depends_on:
      - discovery-server

  order-service:
    container_name: order-service
    image: order-service:latest
    build:
      context: ../../../application/spring-boot/order-application
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - EUREKA_DEFAULT_ZONE=http://discovery-server:8761/eureka
      - GRPC_CLIENT_USER_ADDRESS=static://user-service:50051
      - GRPC_CLIENT_PRODUCT_ADDRESS=static://product-service:50052
      - REST_USER_BASE_URL=http://user-service:8081
      - REST_PRODUCT_BASE_URL=http://product-service:8082
      - MYSQL_URL=jdbc:mysql://mysql:3306/db_order?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    volumes:
      - order-service-log:/var/log/order-service
    depends_on:
      - discovery-server

  notification-service:
    container_name: notification-service
    image: notification-service:latest
    build:
      context: ../../../application/spring-boot/notification-service
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - MYSQL_URL=jdbc:mysql://mysql:3306/db_notification?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
      - MAIL_SERVER_HOST=smtp4dev
    volumes:
      - notification-service-log:/var/log/notification-service

  auth-server:
    container_name: auth-server
    image: auth-server:latest
    build:
      context: ../../../edge/auth-server/auth-server-spring-security-jwt
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "8091:8091"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - EUREKA_DEFAULT_ZONE=http://discovery-server:8761/eureka
      - MYSQL_URL=jdbc:mysql://mysql:3306/db_auth?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - auth-server-log:/var/log/auth-server
    depends_on:
      - discovery-server

  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    build:
      context: ../../../edge/api-gateway/api-gateway-spring-cloud-gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local-compose
      - EUREKA_DEFAULT_ZONE=http://discovery-server:8761/eureka
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    volumes:
      - api-gateway-log:/var/log/api-gateway
    depends_on:
      - discovery-server

volumes:
  mysql-data:
  redis-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  rabbitmq-data:
  grafana-data:
  keycloak-data:
  smtp4dev-data:
  discovery-server-log:
  user-service-log:
  product-service-log:
  order-service-log:
  notification-service-log:
  auth-server-log:
  api-gateway-log:
