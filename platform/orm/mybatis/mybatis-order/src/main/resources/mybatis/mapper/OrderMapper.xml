<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.atlas.platform.orm.mybatis.order.mapper.OrderMapper">

	<resultMap id="OrderResultMap" type="org.atlas.service.order.domain.Order">
		<id property="id" column="id"/>
		<result property="userId" column="user_id"/>
		<result property="canceledReason" column="canceled_reason"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<collection property="orderItems" ofType="org.atlas.service.order.domain.OrderItem"
					column="id" select="selectOrderItemsByOrderId"/>
	</resultMap>

	<resultMap id="OrderItemResultMap" type="org.atlas.service.order.domain.OrderItem">
		<result property="productId" column="product_id"/>
		<result property="productPrice" column="product_price"/>
	</resultMap>

	<select id="findByUserId" resultMap="OrderResultMap">
		select o.*
		from orders o
		where o.user_id = #{userId}
		<if test="pagingRequest.hasSort()">
			order by #{pagingRequest.sort} #{pagingRequest.sortOrder}
		</if>
		<if test="pagingRequest.limit != null and pagingRequest.offset != null">
			limit #{pagingRequest.limit}
			offset #{pagingRequest.offset}
		</if>
	</select>

	<select id="selectOrderItemsByOrderId" resultMap="OrderItemResultMap">
		select oi.order_id, oi.product_id, oi.product_price, oi.quantity
		from order_item oi
		where oi.order_id = #{id}
	</select>

	<select id="findById" resultMap="OrderResultMap">
		select o.*
		from orders o
		where o.id = #{id}
		limit 1
	</select>

	<select id="countByUserId" resultType="long">
		select count(o.id)
		from orders o
		where o.user_id = #{userId}
	</select>

	<insert id="insert" parameterType="org.atlas.service.order.domain.Order"
			useGeneratedKeys="true" keyProperty="id">
		insert into orders (user_id, amount, status)
		values (#{userId}, #{amount}, #{status})
	</insert>

	<update id="update" parameterType="org.atlas.service.order.domain.Order">
		update orders o
		set o.status = #{status},
		    o.canceled_reason = #{canceledReason}
		where o.id = #{id}
	</update>
</mapper>
