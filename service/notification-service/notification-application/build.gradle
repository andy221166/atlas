plugins {
    id 'maven-publish'
    id 'org.springframework.boot' version '3.4.0'
}

def modules = rootProject.ext.loadStackConfig()

dependencies {
    api project(':config-loader')

    switch (modules['datasource']) {
        case 'mysql':
            api project(':notification-datasource-mysql')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['datasource']}")
    }

    switch (modules['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['discovery-client']}")
    }

//    switch (modules['event']) {
//        case 'kafka':
//            api project(':event-kafka')
//            break
//        case 'rabbitmq':
//            api project(':event-rabbitmq')
//            break
//        case 'sns':
//            api project(':event-sns')
//            break
//        default:
//            throw new IllegalArgumentException("Unsupported ${modules['event']}")
//    }

    switch (modules['email']) {
        case 'spring':
            api project(':email-spring')
            break
        case 'ses':
            api project(':email-ses')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['email']}")
    }

    switch (modules['logging']) {
        case 'logback':
            api project(':logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['logging']}")
    }

    api project(':actuator')

    api project(':sse')

    switch (modules['template']) {
        case 'freemarker':
            api project(':template-freemarker')
            break
        case 'thymeleaf':
            api project(':template-thymeleaf')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['template']}")
    }

    switch (modules['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['tracing']}")
    }

    api project(':websocket')
}

jar {
    enabled = false
}

publishing {
    publications {
        publication(MavenPublication) {
            artifact bootJar
            from components.java
        }
    }
}
