plugins {
    id 'maven-publish'
    id 'org.springframework.boot' version '3.4.0'
}

def modules = rootProject.ext.loadStackConfig()

dependencies {
    // Config
    api project(':config-loader')

    // Port
    api project(':catalog-port-inbound')
    api project(':catalog-port-outbound')

    api project(':actuator')

    switch (modules['api-server']) {
        case 'rest':
            api project(':catalog-api-server-rest')
            break
        case 'grpc':
            api project(':catalog-api-server-grpc-netdevh')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['api-server']}")
    }

    switch (modules['cache']) {
        case 'caffeine':
            api project(':cache-caffeine')
            break
        case 'ehcache':
            api project(':cache-ehcache')
            break
        case 'redis':
            api project(':cache-redis')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['cache']}")
    }

    switch (modules['datasource']) {
        case 'mysql':
            api project(':catalog-datasource-mysql')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['datasource']}")
    }

    switch (modules['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['discovery-client']}")
    }

    switch (modules['event']) {
        case 'kafka':
            api project(':catalog-event-publisher-kafka')
            break
        case 'rabbitmq':
            api project(':event-rabbitmq')
            break
        case 'sns':
            api project(':event-sns')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['event']}")
    }

    switch (modules['logging']) {
        case 'logback':
            api project(':logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['logging']}")
    }

    switch (modules['persistence']) {
        case 'jpa':
            api project(':catalog-persistence-jpa')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['persistence']}")
    }

    switch (modules['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['tracing']}")
    }

    api project(':use-case-application')
}

jar {
    enabled = false
}

publishing {
    publications {
        publication(MavenPublication) {
            artifact bootJar
            from components.java
        }
    }
}
