plugins {
    id 'maven-publish'
    id 'org.springframework.boot' version '3.4.0'
}

def modules = rootProject.ext.loadStackConfig()

dependencies {
    api project(':order-port-inbound')
    api project(':order-port-outbound')

    api project(':actuator')
    switch (modules['api-client']) {
        case 'grpc-netdevh':
            api project(':product-api-client-grpc-netdevh')
            api project(':user-api-client-grpc-netdevh')
            break
        case 'rest-apachehttpclient':
            api project(':product-api-client-rest-apachehttpclient')
            api project(':user-api-client-rest-apachehttpclient')
            break
        case 'rest-feign':
            api project(':product-api-client-rest-feign')
            api project(':user-api-client-rest-feign')
            break
        case 'rest-resttemplate':
            api project(':product-api-client-rest-resttemplate')
            api project(':user-api-client-rest-resttemplate')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['api-client']}")
    }
    switch (modules['api-server']) {
        case 'rest':
            api project(':order-api-server-rest')
            break
        case 'grpc':
            api project(':order-api-server-grpc-netdevh')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['api-server']}")
    }
    api project(':config')
    switch (modules['datasource']) {
        case 'mysql':
            api project(':order-datasource-mysql')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['datasource']}")
    }
    switch (modules['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['discovery-client']}")
    }

    switch (modules['event']) {
        case 'kafka':
            api project(':order-event-kafka')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['event']}")
    }
    switch (modules['logging']) {
        case 'logback':
            api project(':logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['logging']}")
    }
    switch (modules['persistence']) {
        case 'jpa':
            api project(':order-persistence-jpa')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['persistence']}")
    }
    api project(':sequence-generator')
    switch (modules['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['tracing']}")
    }
}

jar {
    enabled = false
}

publishing {
    publications {
        publication(MavenPublication) {
            artifact bootJar
            from components.java
        }
    }
}
