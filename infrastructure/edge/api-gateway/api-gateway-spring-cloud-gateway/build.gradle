plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'maven-publish'
}

def modules = loadStackConfig()

dependencies {
    // Commons
    api project(':commons')

    // Lib
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.6'

    // Platform
    api project(':adapter-spring-boot:actuator')
    api project(':adapter-spring-boot:config')
    switch (modules['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':adapter-spring-boot:discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':adapter-spring-boot:discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['discovery-client']}")
    }
    api project(':adapter-spring-boot:json')
    api project(':adapter-spring-boot:jwt-auth0')
    switch (modules['logging']) {
        case 'logback':
            api project(':adapter-spring-boot:logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['logging']}")
    }
    switch (modules['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':adapter-spring-boot:tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['tracing']}")
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    enabled = false
}

publishing {
    publications {
        publication(MavenPublication) {
            artifact bootJar
            from components.java
        }
    }
}
