plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
}

dependencies {
    // Domain
    api project(':order-domain')

    // Infrastructure
    api project(':infrastructure-spring-boot:actuator')
    switch (stackConfig['api-client']) {
        case 'grpc-netdevh':
            api project(':infrastructure-spring-boot:product-api-grpc-netdevh')
            api project(':infrastructure-spring-boot:user-api-grpc-netdevh')
            break
        case 'rest-apachehttpclient':
            api project(':infrastructure-spring-boot:product-api-rest-apachehttpclient')
            api project(':infrastructure-spring-boot:user-api-rest-apachehttpclient')
            break
        case 'rest-feign':
            api project(':infrastructure-spring-boot:product-api-rest-feign')
            api project(':infrastructure-spring-boot:user-api-rest-feign')
            break
        case 'rest-resttemplate':
            api project(':infrastructure-spring-boot:product-api-rest-resttemplate')
            api project(':infrastructure-spring-boot:user-api-rest-resttemplate')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['api-client']}")
    }
    switch (stackConfig['api-server']) {
        case 'rest':
            api project(':infrastructure-spring-boot:api-server-rest-adapter-order')
            break
        case 'grpc':
            api project(':infrastructure-spring-boot:api-server-grpc-netdevh-adapter-order')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['api-server']}")
    }
    api project(':infrastructure-spring-boot:bean')
    api project(':infrastructure-spring-boot:config')
    switch (stackConfig['datasource']) {
        case 'mysql':
            api project(':infrastructure-spring-boot:datasource-mysql-adapter-order')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['datasource']}")
    }
    switch (stackConfig['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':infrastructure-spring-boot:discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':infrastructure-spring-boot:discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['discovery-client']}")
    }
    switch (stackConfig['messaging']) {
        case 'kafka':
            api project(':infrastructure-spring-boot:messaging-kafka-adapter-order')
            break
        case 'sns':
            api project(':infrastructure-spring-boot:messaging-sns-adapter-order')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['messaging']}")
    }
    api project(':infrastructure-spring-boot:messaging-handler-decorator')
    switch (stackConfig['logging']) {
        case 'logback':
            api project(':infrastructure-spring-boot:logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['logging']}")
    }
    switch (stackConfig['persistence']) {
        case 'jpa':
            api project(':infrastructure-spring-boot:persistence-jpa-adapter-order')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['persistence']}")
    }
    switch (stackConfig['scheduler']) {
        case 'spring':
            api project(':infrastructure-spring-boot:scheduler-spring-adapter-order')
            break
        case 'quartz':
            api project(':infrastructure-spring-boot:scheduler-quartz-adapter-order')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['scheduler']}")
    }
    api project(':infrastructure-spring-boot:sequence-generator')
    switch (stackConfig['tracing']) {
        case 'simple':
            api project(':infrastructure-spring-boot:tracing-simple')
            break
        case 'zipkin':
            api project(':infrastructure-spring-boot:tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['tracing']}")
    }
    api project(':infrastructure-spring-boot:use-case-handler-decorator')
}
