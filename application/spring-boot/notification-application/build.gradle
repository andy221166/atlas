dependencies {
    // Domain
    api project(':notification-domain')

    // Infrastructure
    api project(':infrastructure-spring-boot:actuator')
    api project(':infrastructure-spring-boot:bean')
    api project(':infrastructure-spring-boot:config')
    switch (stackConfig['datasource']) {
        case 'mysql':
            api project(':infrastructure-spring-boot:datasource-mysql-adapter-notification')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['datasource']}")
    }
    switch (stackConfig['email']) {
        case 'spring':
            api project(':infrastructure-spring-boot:email-spring')
            break
        case 'ses':
            api project(':infrastructure-spring-boot:email-ses')
            break
        case 'sendgrid':
            api project(':infrastructure-spring-boot:email-sendgrid')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['email']}")
    }
    switch (stackConfig['event']) {
        case 'kafka':
            api project(':infrastructure-spring-boot:event-kafka-adapter-notification')
            break
        case 'sns':
            api project(':infrastructure-spring-boot:event-sns-adapter-notification')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['event']}")
    }
    api project(':infrastructure-spring-boot:event-handler-decorator')
    switch (stackConfig['logging']) {
        case 'logback':
            api project(':infrastructure-spring-boot:logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['logging']}")
    }
    switch (stackConfig['scheduler']) {
        case 'spring':
            api project(':infrastructure-spring-boot:scheduler-spring-adapter-notification')
            break
        case 'quartz':
            api project(':infrastructure-spring-boot:scheduler-quartz-adapter-notification')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['scheduler']}")
    }
    api project(':infrastructure-spring-boot:sse')
    switch (stackConfig['template']) {
        case 'freemarker':
            api project(':infrastructure-spring-boot:template-freemarker')
            break
        case 'thymeleaf':
            api project(':infrastructure-spring-boot:template-thymeleaf')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['template']}")
    }
    switch (stackConfig['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':infrastructure-spring-boot:tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['tracing']}")
    }
    api project(':infrastructure-spring-boot:use-case-handler-decorator')
    api project(':infrastructure-spring-boot:websocket')
}
