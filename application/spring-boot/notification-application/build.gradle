plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'maven-publish'
}

def modules = loadStackConfig()

dependencies {
    // Domain
    api project(':order-domain-shared')

    // Port
    api project(':notification-port-inbound')
    api project(':notification-port-outbound')

    // Platform
    api project(':adapter-spring-boot:actuator')
    api project(':adapter-spring-boot:config')
    switch (modules['datasource']) {
        case 'mysql':
            api project(':adapter-spring-boot:notification-datasource-mysql')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['datasource']}")
    }
    switch (modules['event']) {
        case 'kafka':
            api project(':adapter-spring-boot:notification-event-kafka')
            break
        case 'sns':
            api project(':adapter-spring-boot:notification-event-sns')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['event']}")
    }
    switch (modules['email']) {
        case 'spring':
            api project(':adapter-spring-boot:email-spring')
            break
        case 'ses':
            api project(':adapter-spring-boot:email-ses')
            break
        case 'sendgrid':
            api project(':adapter-spring-boot:email-sendgrid')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['email']}")
    }
    switch (modules['logging']) {
        case 'logback':
            api project(':adapter-spring-boot:logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['logging']}")
    }
    api project(':adapter-spring-boot:sse')
    switch (modules['template']) {
        case 'freemarker':
            api project(':adapter-spring-boot:template-freemarker')
            break
        case 'thymeleaf':
            api project(':adapter-spring-boot:template-thymeleaf')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['template']}")
    }
    switch (modules['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':adapter-spring-boot:tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${modules['tracing']}")
    }
    api project(':adapter-spring-boot:websocket')
}

jar {
    enabled = false
}

publishing {
    publications {
        publication(MavenPublication) {
            artifact bootJar
            from components.java
        }
    }
}
