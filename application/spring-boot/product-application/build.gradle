dependencies {
    // Domain
    api project(':product-domain')

    // Infrastructure
    api project(':infrastructure-spring-boot:actuator')
    switch (stackConfig['api-server']) {
        case 'rest':
            api project(':infrastructure-spring-boot:api-server-rest-adapter-product')
            break
        case 'grpc':
            api project(':infrastructure-spring-boot:api-server-grpc-netdevh-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['api-server']}")
    }
    switch (stackConfig['cache']) {
        case 'redis':
            api project(':infrastructure-spring-boot:cache-redis')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['cache']}")
    }
    api project(':infrastructure-spring-boot:bean')
    api project(':infrastructure-spring-boot:config')
    switch (stackConfig['csv']) {
        case 'opencsv':
            api project(':infrastructure-spring-boot:csv-opencsv-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['csv']}")
    }
    switch (stackConfig['datasource']) {
        case 'mysql':
            api project(':infrastructure-spring-boot:datasource-mysql-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['datasource']}")
    }
    switch (stackConfig['discovery-client']) {
        case 'none':
            break
        case 'eureka':
            api project(':infrastructure-spring-boot:discovery-client-eureka')
            break
        case 'kubernetes':
            api project(':infrastructure-spring-boot:discovery-client-kubernetes')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['discovery-client']}")
    }
    switch (stackConfig['event']) {
        case 'kafka':
            api project(':infrastructure-spring-boot:event-kafka-adapter-product')
            break
        case 'sns':
            api project(':infrastructure-spring-boot:event-sns-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['event']}")
    }
    api project(':infrastructure-spring-boot:event-handler-decorator')
    switch (stackConfig['excel']) {
        case 'easyexcel':
            api project(':infrastructure-spring-boot:excel-easyexcel-adapter-product')
            break
        case 'poi':
            api project(':infrastructure-spring-boot:excel-poi-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['excel']}")
    }
    switch (stackConfig['logging']) {
        case 'logback':
            api project(':infrastructure-spring-boot:logging-logback')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['logging']}")
    }
    switch (stackConfig['persistence']) {
        case 'jpa':
            api project(':infrastructure-spring-boot:persistence-jpa-adapter-product')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['persistence']}")
    }
    switch (stackConfig['storage']) {
        case 'filesystem':
            api project(':infrastructure-spring-boot:storage-filesystem')
            break
        case 's3s':
            api project(':infrastructure-spring-boot:storage-s3')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['storage']}")
    }
    switch (stackConfig['tracing']) {
        case 'none':
            break
        case 'zipkin':
            api project(':infrastructure-spring-boot:tracing-zipkin')
            break
        default:
            throw new IllegalArgumentException("Unsupported ${stackConfig['tracing']}")
    }
    api project(':infrastructure-spring-boot:use-case-handler-decorator')
}
