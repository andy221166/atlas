def stack = project.hasProperty('stack') ? project.getProperty('stack') : 'local-compose-simple'

// Define the loadStackConfig closure as a method
def loadStackConfig = { ->
    def configFile = new File("gradle/config/stack/${stack}.cfg")
    if (!configFile.exists()) {
        throw new GradleException("Config file not found for stack: ${configFile.absolutePath}")
    }
    def modules = [:]
    configFile.eachLine { line ->
        line = line.trim()
        if (line && !line.startsWith('#')) { // Skip empty lines and comments
            def (key, value) = line.split('=').collect { it.trim() }
            modules[key] = value
        }
    }
    return modules
}

// Make it callable elsewhere
project.ext.loadStackConfig = loadStackConfig
