def infraStackName = project.hasProperty('infraStackName') ? project.getProperty('infraStackName') : 'local-compose-simple'

// Validate infraStackName
if (!infraStackName.matches('[a-zA-Z0-9-_]+')) {
    throw new GradleException("Invalid infraStack name: ${infraStackName}")
}

// Define the loadInfraStack closure for loading infra stack configuration
def loadInfraStack = { String stackName = infraStackName ->
    def configFile = new File("gradle/infra-stack/config/${stackName}.cfg")
    if (!configFile.exists()) {
        throw new GradleException("Config file not found for stack: ${configFile.absolutePath}")
    }
    Map<String, String> infraStack = [:]
    configFile.eachLine('UTF-8') { line ->
        line = line.trim()
        if (line && !line.startsWith('#')) { // Skip empty lines and comments
            def parts = line.split('=', 2).collect { it.trim() }
            if (parts.size() == 2 && parts[1]) {
                infraStack[parts[0]] = parts[1]
            } else {
                throw new GradleException("Invalid or empty value in ${configFile.absolutePath}: '${line}'")
            }
        }
    }
    return infraStack
}

// Make it callable elsewhere
project.ext.loadInfraStack = loadInfraStack
